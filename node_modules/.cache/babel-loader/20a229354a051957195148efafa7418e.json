{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/home1/Documents/Coding/REACT/prem/src/apis/googleAuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, createContext } from 'react';\nexport const GoogleAuthContext = /*#__PURE__*/createContext();\n\nconst GoogleAuthContextProvider = props => {\n  _s();\n\n  const [signedIn, setSignedIn] = useState(null);\n  const [userGivenName, setUserGivenName] = useState(null);\n  const [userId, setUserId] = useState();\n  useEffect(() => {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '938718032559-c7ed870afhfngepnv87e5u1jv8dmpb71.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        const auth = window.gapi.auth2.getAuthInstance();\n        setSignedIn(auth.isSignedIn.get());\n        auth.isSignedIn.listen(onAuthChange);\n      });\n    });\n  }, [signedIn]);\n\n  const onAuthChange = () => {\n    setSignedIn(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n    setUserGivenName(window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getGivenName());\n  };\n\n  const onSignIn = () => {\n    window.gapi.auth2.getAuthInstance().signIn();\n  };\n\n  const onSignOut = () => {\n    window.gapi.auth2.getAuthInstance().signOut();\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoogleAuthContext.Provider, {\n    value: {\n      signedIn,\n      onSignIn,\n      onSignOut\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GoogleAuthContextProvider, \"5D1hmtDHAr0+wv1fQu0WGm/+NW0=\");\n\n_c = GoogleAuthContextProvider;\nexport default GoogleAuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleAuthContextProvider\");","map":{"version":3,"sources":["/Users/home1/Documents/Coding/REACT/prem/src/apis/googleAuthContext.js"],"names":["useEffect","useState","createContext","GoogleAuthContext","GoogleAuthContextProvider","props","signedIn","setSignedIn","userGivenName","setUserGivenName","userId","setUserId","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","isSignedIn","get","listen","onAuthChange","currentUser","getBasicProfile","getGivenName","onSignIn","signIn","onSignOut","signOut","children"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,aAA9B,QAAmD,OAAnD;AAEA,OAAO,MAAMC,iBAAiB,gBAAGD,aAAa,EAAvC;;AAEP,MAAME,yBAAyB,GAAIC,KAAD,IAAW;AAAA;;AACzC,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAAEO,aAAF,EAAiBC,gBAAjB,IAAsCR,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAAES,MAAF,EAAUC,SAAV,IAAwBV,QAAQ,EAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,cAAMC,IAAI,GAAGR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAb;AACAf,QAAAA,WAAW,CAACa,IAAI,CAACG,UAAL,CAAgBC,GAAhB,EAAD,CAAX;AACAJ,QAAAA,IAAI,CAACG,UAAL,CAAgBE,MAAhB,CAAuBC,YAAvB;AACH,OAPD;AAQH,KATD;AAUH,GAXQ,EAWN,CAACpB,QAAD,CAXM,CAAT;;AAaA,QAAMoB,YAAY,GAAG,MAAM;AACvBnB,IAAAA,WAAW,CAACK,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,GAAoCC,UAApC,CAA+CC,GAA/C,EAAD,CAAX;AACAf,IAAAA,gBAAgB,CAACG,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,GAAoCK,WAApC,CAAgDH,GAAhD,GAAsDI,eAAtD,GAAwEC,YAAxE,EAAD,CAAhB;AACH,GAHD;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACnBlB,IAAAA,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,GAAoCS,MAApC;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACpBpB,IAAAA,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,GAAoCW,OAApC;AACH,GAFD;;AAIA,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAAC3B,MAAAA,QAAD;AAAWwB,MAAAA,QAAX;AAAqBE,MAAAA;AAArB,KAAnC;AAAA,cACK3B,KAAK,CAAC6B;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApCD;;GAAM9B,yB;;KAAAA,yB;AAsCN,eAAeA,yBAAf","sourcesContent":["import { useEffect, useState, createContext } from 'react';\n\nexport const GoogleAuthContext = createContext();\n\nconst GoogleAuthContextProvider = (props) => {\n    const [ signedIn, setSignedIn ] = useState(null);\n    const [ userGivenName, setUserGivenName ] = useState(null);\n    const [ userId, setUserId ] = useState();\n\n    useEffect(() => {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '938718032559-c7ed870afhfngepnv87e5u1jv8dmpb71.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                const auth = window.gapi.auth2.getAuthInstance();\n                setSignedIn(auth.isSignedIn.get());\n                auth.isSignedIn.listen(onAuthChange);\n            })\n        });\n    }, [signedIn])\n    \n    const onAuthChange = () => {\n        setSignedIn(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n        setUserGivenName(window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getGivenName());\n    }\n\n    const onSignIn = () => {\n        window.gapi.auth2.getAuthInstance().signIn();\n    }\n\n    const onSignOut = () => {\n        window.gapi.auth2.getAuthInstance().signOut();\n    }\n\n    return(\n        <GoogleAuthContext.Provider value={{signedIn, onSignIn, onSignOut}}>\n            {props.children}\n        </GoogleAuthContext.Provider>\n    )\n}\n\nexport default GoogleAuthContextProvider;"]},"metadata":{},"sourceType":"module"}