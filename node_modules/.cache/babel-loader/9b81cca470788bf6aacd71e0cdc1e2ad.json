{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport fixturesData from '../apis/fixturesData';\n\nconst useAxios = (url, int) => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const [timer, setTimer] = useState(0);\n  useEffect(() => {\n    setInterval(() => {\n      fixturesData.get(url).then(res => {\n        if (res.statusText !== 'OK') {\n          throw Error('could not fetch data from that resource');\n        }\n\n        return res;\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        setIsPending(false);\n        setError(err);\n      }).then(data => {\n        setTimer(timer + 1);\n      });\n    }, int);\n  }, [url, timer]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useAxios, \"6MQSsXr0mbjCX+FHDEzBcvbW2ps=\");\n\nexport default useAxios;","map":{"version":3,"sources":["/Users/home1/Documents/Coding/REACT/prem/src/components/useAxios.js"],"names":["useState","useEffect","fixturesData","useAxios","url","int","data","setData","isPending","setIsPending","error","setError","timer","setTimer","setInterval","get","then","res","statusText","Error","catch","err"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,WAAW,CAAC,MAAM;AACdZ,MAAAA,YAAY,CAACa,GAAb,CAAiBX,GAAjB,EACCY,IADD,CACOC,GAAD,IAAS;AACf,YAAIA,GAAG,CAACC,UAAJ,KAAmB,IAAvB,EAA4B;AACxB,gBAAMC,KAAK,CAAC,yCAAD,CAAX;AACH;;AACD,eAAOF,GAAP;AACC,OAND,EAOCD,IAPD,CAOMV,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAXD,EAYCS,KAZD,CAYOC,GAAG,IAAI;AACVZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACU,GAAD,CAAR;AACH,OAfD,EAgBCL,IAhBD,CAgBMV,IAAI,IAAI;AACVO,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,OAlBD;AAmBH,KApBU,EAoBRP,GApBQ,CAAX;AAqBH,GAtBQ,EAsBN,CAACD,GAAD,EAAMQ,KAAN,CAtBM,CAAT;AAwBA,SAAO;AAAEN,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACH,CA/BD;;GAAMP,Q;;AAiCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport fixturesData from '../apis/fixturesData';\n\nconst useAxios = (url, int) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n    const [timer, setTimer] = useState(0);\n\n    useEffect(() => {  \n        setInterval(() => {\n            fixturesData.get(url)\n            .then((res) => {\n            if (res.statusText !== 'OK'){\n                throw Error('could not fetch data from that resource')\n            }\n            return res;\n            })\n            .then(data => {\n                setData(data);\n                setIsPending(false);\n                setError(null);\n            })\n            .catch(err => {\n                setIsPending(false);\n                setError(err);\n            })\n            .then(data => {\n                setTimer(timer + 1)\n            })\n        }, int)\n    }, [url, timer])\n\n    return { data, isPending, error}\n}\n\nexport default useAxios;"]},"metadata":{},"sourceType":"module"}