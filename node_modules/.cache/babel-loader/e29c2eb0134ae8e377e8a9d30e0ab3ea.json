{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/home1/Documents/Coding/REACT/prem/src/components/App.js\";\nimport './App.css';\nimport React, { useEffect, useState, useRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport fixturesData from '../apis/fixturesData';\nimport useAxios from './useAxios';\nimport Navbar from './navbar';\nimport Home from './home';\nimport LiveScores from './liveScores';\nimport News from './news';\nimport NewsArticle from './newsArticle';\nimport LeagueTable from './leagueTable';\nimport TopScorers from './topScorers';\n\nconst App = props => {\n  // const { data: table, isPending: tablePending, error: tableError } \n  //       = useAxios('leagueTable/2790', 86400000);\n  // const { data: todaysGames, isPending: todaysGamesPending, error: todaysGamesError }\n  //       = useAxios(`fixtures/league/2790/${new Date().toISOString().slice(0,10)}`, 86400000);\n  // const [round, setRound] = useState('');\n  // const [fixtures, setFixtures] = useState([]);\n  // const prevRound = useRef(round);\n  // useEffect(() => {\n  //     if (round !== prevRound.current) {\n  //             fetchFixtures();\n  //         } else {\n  //         fixturesData.get('fixtures/rounds/2790/current').then((res) => {\n  //             let currentRound = res.data.api.fixtures[0].slice(-2);\n  //             if (currentRound[0] === '_') {\n  //                 currentRound = currentRound[1];\n  //             }\n  //             setRound(currentRound);\n  //             prevRound.current = currentRound;\n  //             }).catch(function (error) {\n  //                 console.log(error);\n  //             }).then(() => {\n  //                 fetchFixtures();\n  //             })\n  //     }\n  // },[round, todaysGames, table])\n  // const fetchFixtures = () => {\n  //     fixturesData.get(`fixtures/league/2790/Regular_Season_-_${round}`).then((res) => {\n  //         setFixtures(res.data.api.fixtures);\n  //         }).catch(function (error) {\n  //         console.log(error);\n  //     })\n  // }\n  // const updateRound = (round) => {\n  //     setRound(round);\n  // }\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/news\",\n        children: /*#__PURE__*/_jsxDEV(News, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/news/:id\",\n        children: /*#__PURE__*/_jsxDEV(NewsArticle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/topscorers\",\n        children: /*#__PURE__*/_jsxDEV(TopScorers, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_c = App;\nexport default App; // const formatRound = () => {\n//     if (isPending === true || error){\n//         console.log(isPending, error);\n//     } else if (round !== prevRound.current) {\n//         fetchFixtures();\n//     } else {\n//         let currentRound = current.data.api.fixtures[0].slice(-2);\n//         if(currentRound[0] === '_'){\n//             currentRound = currentRound[1];\n//         } \n//         setRound(currentRound);\n//         prevRound.current = currentRound;\n//     }\n// }\n// const fetchFixtures = () => {\n//     fixturesData.get(`fixtures/league/2790/Regular_Season_-_${round}`).then((res) => {\n//         setFixtures(res.data.api.fixtures);\n//         }).catch(function (error) {\n//         console.log(error);\n//     })\n// }\n// const { activeItem } = this.state\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/home1/Documents/Coding/REACT/prem/src/components/App.js"],"names":["React","useEffect","useState","useRef","BrowserRouter","Router","Switch","Route","fixturesData","useAxios","Navbar","Home","LiveScores","News","NewsArticle","LeagueTable","TopScorers","App","props","console","log"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,kCAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AAEA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACI,QAAC,MAAD;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA,8BAGM,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,OAAlB;AAAA,+BAA0B,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,cAHN,eAIM,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,WAAlB;AAAA,+BAA8B,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAJN,eAMM,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,aAAlB;AAAA,+BAAgC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,cANN;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CArDD;;KAAMD,G;AAuDN,eAAeA,GAAf,C,CAGA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI","sourcesContent":["import './App.css';\nimport React, { useEffect, useState, useRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport fixturesData from '../apis/fixturesData';\nimport useAxios from './useAxios';\nimport Navbar from './navbar';\nimport Home from './home';\nimport LiveScores from './liveScores';\nimport News from './news';\nimport NewsArticle from './newsArticle';\nimport LeagueTable from './leagueTable';\nimport TopScorers from './topScorers';\n\n\nconst App = (props) => {\n    // const { data: table, isPending: tablePending, error: tableError } \n    //       = useAxios('leagueTable/2790', 86400000);\n    // const { data: todaysGames, isPending: todaysGamesPending, error: todaysGamesError }\n    //       = useAxios(`fixtures/league/2790/${new Date().toISOString().slice(0,10)}`, 86400000);\n    // const [round, setRound] = useState('');\n    // const [fixtures, setFixtures] = useState([]);\n    // const prevRound = useRef(round);\n\n    // useEffect(() => {\n    //     if (round !== prevRound.current) {\n    //             fetchFixtures();\n    //         } else {\n    //         fixturesData.get('fixtures/rounds/2790/current').then((res) => {\n    //             let currentRound = res.data.api.fixtures[0].slice(-2);\n    //             if (currentRound[0] === '_') {\n    //                 currentRound = currentRound[1];\n    //             }\n    //             setRound(currentRound);\n    //             prevRound.current = currentRound;\n    //             }).catch(function (error) {\n    //                 console.log(error);\n    //             }).then(() => {\n    //                 fetchFixtures();\n    //             })\n    //     }\n    // },[round, todaysGames, table])\n\n    // const fetchFixtures = () => {\n    //     fixturesData.get(`fixtures/league/2790/Regular_Season_-_${round}`).then((res) => {\n    //         setFixtures(res.data.api.fixtures);\n    //         }).catch(function (error) {\n    //         console.log(error);\n    //     })\n    // }\n\n    // const updateRound = (round) => {\n    //     setRound(round);\n    // }\n    console.log(props);\n    return(\n        <Router>\n            <Navbar/>\n            <Switch>\n                  {/* <Route exact path=\"/\"><Home round={round} fixtures={fixtures} updateRound={updateRound}/></Route>\n                  <Route exact path=\"/livescores\"><LiveScores todaysGames={todaysGames} todaysGamesPending={todaysGamesPending} todaysGamesError={todaysGamesError}/></Route> */}\n                  <Route exact path=\"/news\"><News/></Route>\n                  <Route exact path=\"/news/:id\"><NewsArticle/></Route>\n                  {/* <Route exact path=\"/leaguetable\"><LeagueTable table={table} tablePending={tablePending} tableError={tableError}/></Route> */}\n                  <Route exact path=\"/topscorers\"><TopScorers/></Route>\n            </Switch>\n        </Router>\n    )  \n}\n \nexport default App;\n\n\n// const formatRound = () => {\n    //     if (isPending === true || error){\n    //         console.log(isPending, error);\n    //     } else if (round !== prevRound.current) {\n    //         fetchFixtures();\n    //     } else {\n    //         let currentRound = current.data.api.fixtures[0].slice(-2);\n    //         if(currentRound[0] === '_'){\n    //             currentRound = currentRound[1];\n    //         } \n    //         setRound(currentRound);\n    //         prevRound.current = currentRound;\n    //     }\n    // }\n\n    // const fetchFixtures = () => {\n    //     fixturesData.get(`fixtures/league/2790/Regular_Season_-_${round}`).then((res) => {\n    //         setFixtures(res.data.api.fixtures);\n    //         }).catch(function (error) {\n    //         console.log(error);\n    //     })\n    // }\n\n\n        // const { activeItem } = this.state"]},"metadata":{},"sourceType":"module"}